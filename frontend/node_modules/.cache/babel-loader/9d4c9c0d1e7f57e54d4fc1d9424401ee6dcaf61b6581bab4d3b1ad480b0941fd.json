{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Task Management\\\\frontend\\\\src\\\\components\\\\Auth.js\",\n  _s = $RefreshSig$();\n// frontend/src/components/Auth.js\nimport React, { useState } from 'react';\nimport { login, signup } from '../api/authApi';\nimport './Auth.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Auth = ({\n  onSuccessfulLogin\n}) => {\n  _s();\n  const [mode, setMode] = useState('login');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const [username, setUsername] = useState('');\n  const [usernameError, setUsernameError] = useState('');\n\n  // Rate limiting variables\n  const [loginAttempts, setLoginAttempts] = useState(0);\n  const maxLoginAttempts = 3;\n  const lockoutDuration = 30000; // 30 seconds in milliseconds\n  const [isLockedOut, setIsLockedOut] = useState(false);\n  const [lockoutTimestamp, setLockoutTimestamp] = useState(null);\n  const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*()_+])[A-Za-z\\d!@#$%^&*()_+]{8,}$/;\n  const emailRegex = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i;\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (name === 'email') setEmail(value);else if (name === 'password') setPassword(value);\n  };\n  const validateEmail = () => {\n    if (!emailRegex.test(email)) {\n      setEmailError('Please enter a valid email address');\n      return false;\n    } else {\n      setEmailError('');\n      return true;\n    }\n  };\n  const validatePassword = () => {\n    if (!passwordRegex.test(password)) {\n      setPasswordError('Password must be at least 8 characters long, contain one uppercase letter, one number, and one special character (!@#$%^&*()_+)');\n      return false;\n    } else {\n      setPasswordError('');\n      return true;\n    }\n  };\n  const handleUsernameChange = e => {\n    setUsername(e.target.value);\n  };\n  const validateUsername = () => {\n    if (username.trim() === '') {\n      setUsernameError('Username is required');\n      return false;\n    } else if (username.length < 3) {\n      setUsernameError('Username must be at least 3 characters long');\n      return false;\n    } else {\n      setUsernameError('');\n      return true;\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (isLockedOut) {\n      // Now you can access lockoutTimestamp here\n      setMessage(`Too many login attempts. Please try again in ${Math.round((lockoutDuration - (Date.now() - lockoutTimestamp)) / 1000)} seconds.`);\n      return;\n    }\n    if (mode === 'signup') {\n      // For signup, validate both email and password and show specific errors\n      const isEmailValid = validateEmail();\n      const isPasswordValid = validatePassword();\n      const isUsernameValid = validateUsername(); // Validate username\n\n      if (!isEmailValid || !isPasswordValid || !isUsernameValid) {\n        return; // Stop if either validation fails\n      }\n    } else if (mode === 'login') {\n      // For login, only validate email format\n      if (!validateEmail()) {\n        return;\n      }\n    }\n    try {\n      if (mode === 'login') {\n        let response = await login({\n          username,\n          email,\n          password\n        });\n        if (response.token) {\n          // Successful login\n          setLoginAttempts(0);\n          setMessage('Login successful!');\n          //console.log(\"Login successful - \",response.username);\n          onSuccessfulLogin(response.username); // Pass the username here\n        } else {\n          // Handle incorrect login attempts\n          setLoginAttempts(loginAttempts + 1);\n          if (loginAttempts >= maxLoginAttempts) {\n            // Lockout user\n            setIsLockedOut(true); // Use setIsLockedOut to update state\n            setLockoutTimestamp(Date.now()); // Use setLockoutTimestamp to update state\n            setTimeout(() => {\n              setIsLockedOut(false);\n              setLoginAttempts(0);\n              setMessage('');\n            }, lockoutDuration);\n            setMessage(`Too many login attempts. Please try again in ${Math.round(lockoutDuration / 1000)} seconds.`);\n          } else {\n            setMessage(`Invalid credentials. ${maxLoginAttempts - loginAttempts} attempts remaining.`);\n          }\n        }\n      } else {\n        await signup({\n          email,\n          password,\n          username\n        });\n        setMessage('Registration successful!');\n      }\n    } catch (error) {\n      // Assuming your backend sends a 401 status for incorrect credentials\n      if (error.response && error.response.status === 401) {\n        setLoginAttempts(loginAttempts + 1);\n        if (loginAttempts >= maxLoginAttempts) {\n          // ... (lockout logic remains the same) ...\n          setIsLockedOut(true); // Use setIsLockedOut to update state\n          setLockoutTimestamp(Date.now()); // Use setLockoutTimestamp to update state\n          setTimeout(() => {\n            setIsLockedOut(false);\n            setLoginAttempts(0);\n            setMessage('');\n          }, lockoutDuration);\n          setMessage(`Too many login attempts. Please try again in ${Math.round(lockoutDuration / 1000)} seconds.`);\n        } else {\n          setMessage(`Invalid credentials. ${maxLoginAttempts - loginAttempts} attempts remaining.`);\n        }\n      } else {\n        // Handle other errors (e.g., network issues)\n        console.error(\"Login error:\", error);\n        setMessage('An error occurred during login.');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: mode === 'login' ? 'Login' : 'Signup'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [mode === 'signup' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"username\",\n            value: username,\n            onChange: handleUsernameChange,\n            placeholder: \"Username\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 29\n          }, this), usernameError && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error-message\",\n            children: usernameError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 47\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            value: email,\n            onChange: handleChange,\n            placeholder: \"Email\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 25\n          }, this), emailError && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error-message\",\n            children: emailError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 40\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"password\",\n            value: password,\n            onChange: handleChange,\n            placeholder: \"Password\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 25\n          }, this), mode === 'signup' && passwordError && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error-message\",\n            children: passwordError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 66\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"message\",\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn\",\n          children: mode === 'login' ? 'Login' : 'Signup'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"toggle-mode\",\n        onClick: () => setMode(mode === 'login' ? 'signup' : 'login'),\n        children: mode === 'login' ? 'Signup instead' : 'Login instead'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 9\n  }, this);\n};\n_s(Auth, \"qrucDYj+hNUsT/rFQ/F9wsB/UEQ=\");\n_c = Auth;\nexport default Auth;\nvar _c;\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"names":["React","useState","login","signup","jsxDEV","_jsxDEV","Auth","onSuccessfulLogin","_s","mode","setMode","email","setEmail","password","setPassword","message","setMessage","passwordError","setPasswordError","emailError","setEmailError","username","setUsername","usernameError","setUsernameError","loginAttempts","setLoginAttempts","maxLoginAttempts","lockoutDuration","isLockedOut","setIsLockedOut","lockoutTimestamp","setLockoutTimestamp","passwordRegex","emailRegex","handleChange","e","name","value","target","validateEmail","test","validatePassword","handleUsernameChange","validateUsername","trim","length","handleSubmit","preventDefault","Math","round","Date","now","isEmailValid","isPasswordValid","isUsernameValid","response","token","setTimeout","error","status","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","placeholder","required","onClick","_c","$RefreshReg$"],"sources":["D:/Projects/Task Management/frontend/src/components/Auth.js"],"sourcesContent":["// frontend/src/components/Auth.js\r\nimport React, { useState } from 'react';\r\nimport { login, signup } from '../api/authApi';\r\nimport './Auth.css'; \r\n\r\nconst Auth = ({ onSuccessfulLogin }) => {\r\n    const [mode, setMode] = useState('login');\r\n    const [email, setEmail] = useState(''); \r\n    const [password, setPassword] = useState('');\r\n    const [message, setMessage] = useState('');\r\n\r\n    const [passwordError, setPasswordError] = useState('');\r\n    const [emailError, setEmailError] = useState('');\r\n    const [username, setUsername] = useState('');\r\n    const [usernameError, setUsernameError] = useState('');\r\n\r\n    // Rate limiting variables\r\n    const [loginAttempts, setLoginAttempts] = useState(0);\r\n    const maxLoginAttempts = 3; \r\n    const lockoutDuration = 30000; // 30 seconds in milliseconds\r\n    const [isLockedOut, setIsLockedOut] = useState(false);\r\n    const [lockoutTimestamp, setLockoutTimestamp] = useState(null); \r\n\r\n\r\n    const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*()_+])[A-Za-z\\d!@#$%^&*()_+]{8,}$/;\r\n    const emailRegex = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i; \r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        if (name === 'email') setEmail(value); \r\n        else if (name === 'password') setPassword(value);\r\n    };\r\n\r\n    const validateEmail = () => {\r\n        if (!emailRegex.test(email)) {\r\n            setEmailError('Please enter a valid email address');\r\n            return false;\r\n        } else {\r\n            setEmailError('');\r\n            return true;\r\n        }\r\n    }\r\n\r\n    const validatePassword = () => {\r\n        if (!passwordRegex.test(password)) {\r\n            setPasswordError('Password must be at least 8 characters long, contain one uppercase letter, one number, and one special character (!@#$%^&*()_+)');\r\n            return false;\r\n        } else {\r\n            setPasswordError('');\r\n            return true;\r\n        }\r\n    }\r\n    const handleUsernameChange = (e) => {\r\n        setUsername(e.target.value);\r\n    };\r\n    const validateUsername = () => {\r\n        if (username.trim() === '') {\r\n            setUsernameError('Username is required');\r\n            return false;\r\n        } else if (username.length < 3) {\r\n            setUsernameError('Username must be at least 3 characters long');\r\n            return false;\r\n        } else {\r\n            setUsernameError('');\r\n            return true;\r\n        }\r\n    };\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (isLockedOut) {\r\n            // Now you can access lockoutTimestamp here\r\n            setMessage(`Too many login attempts. Please try again in ${Math.round((lockoutDuration - (Date.now() - lockoutTimestamp)) / 1000)} seconds.`);\r\n            return;\r\n        }\r\n\r\n        if (mode === 'signup') {\r\n            // For signup, validate both email and password and show specific errors\r\n            const isEmailValid = validateEmail();\r\n            const isPasswordValid = validatePassword();\r\n            const isUsernameValid = validateUsername(); // Validate username\r\n\r\n            if (!isEmailValid || !isPasswordValid || !isUsernameValid) {\r\n                return; // Stop if either validation fails\r\n            }\r\n\r\n        } else if (mode === 'login') {\r\n            // For login, only validate email format\r\n            if (!validateEmail()) {\r\n                return;\r\n            }\r\n        }\r\n        try {\r\n            if (mode === 'login') {\r\n                let response = await login({ username, email, password }); \r\n\r\n                if (response.token) {\r\n                    // Successful login\r\n                    setLoginAttempts(0); \r\n                    setMessage('Login successful!');\r\n                    //console.log(\"Login successful - \",response.username);\r\n                    onSuccessfulLogin(response.username);  // Pass the username here\r\n\r\n                } else {\r\n                    // Handle incorrect login attempts\r\n                    setLoginAttempts(loginAttempts + 1);\r\n\r\n                    if (loginAttempts >= maxLoginAttempts) {\r\n                        // Lockout user\r\n                        setIsLockedOut(true); // Use setIsLockedOut to update state\r\n                        setLockoutTimestamp(Date.now()); // Use setLockoutTimestamp to update state\r\n                        setTimeout(() => {\r\n                            setIsLockedOut(false);\r\n                            setLoginAttempts(0); \r\n                            setMessage(''); \r\n                        }, lockoutDuration);\r\n                        setMessage(`Too many login attempts. Please try again in ${Math.round(lockoutDuration / 1000)} seconds.`);\r\n                    } else {\r\n                        setMessage(`Invalid credentials. ${maxLoginAttempts - loginAttempts} attempts remaining.`);\r\n                    }\r\n                }\r\n            } else { \r\n                await signup({ email, password, username }); \r\n                setMessage('Registration successful!');\r\n            }\r\n        } catch (error) {\r\n           // Assuming your backend sends a 401 status for incorrect credentials\r\n        if (error.response && error.response.status === 401) { \r\n            setLoginAttempts(loginAttempts + 1);\r\n\r\n            if (loginAttempts >= maxLoginAttempts) {\r\n                // ... (lockout logic remains the same) ...\r\n                setIsLockedOut(true); // Use setIsLockedOut to update state\r\n                        setLockoutTimestamp(Date.now()); // Use setLockoutTimestamp to update state\r\n                        setTimeout(() => {\r\n                            setIsLockedOut(false);\r\n                            setLoginAttempts(0); \r\n                            setMessage(''); \r\n                        }, lockoutDuration);\r\n                        setMessage(`Too many login attempts. Please try again in ${Math.round(lockoutDuration / 1000)} seconds.`);\r\n            } else {\r\n                setMessage(`Invalid credentials. ${maxLoginAttempts - loginAttempts} attempts remaining.`);\r\n            }\r\n        } else {\r\n            // Handle other errors (e.g., network issues)\r\n            console.error(\"Login error:\", error);\r\n            setMessage('An error occurred during login.'); \r\n        }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"auth-container\"> \r\n            <div className=\"auth-form\">\r\n                <h2>{mode === 'login' ? 'Login' : 'Signup'}</h2>\r\n                <form onSubmit={handleSubmit}>\r\n                    {mode === 'signup' && ( \r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\" \r\n                                name=\"username\" \r\n                                value={username} \r\n                                onChange={handleUsernameChange} \r\n                                placeholder=\"Username\" \r\n                                required \r\n                            />\r\n                            {usernameError && <p className=\"error-message\">{usernameError}</p>}\r\n                        </div>\r\n                    )}\r\n                    <div className=\"form-group\">\r\n                        <input type=\"email\" name=\"email\" value={email} onChange={handleChange} placeholder=\"Email\" required /> \r\n                        {emailError && <p className=\"error-message\">{emailError}</p>} \r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"password\" name=\"password\" value={password} onChange={handleChange} placeholder=\"Password\" required />\r\n                        {(mode === 'signup' && passwordError) && <p className=\"error-message\">{passwordError}</p>} \r\n                    </div>\r\n                <p className=\"message\">{message}</p>\r\n                    <button type=\"submit\" className=\"btn\">{mode === 'login' ? 'Login' : 'Signup'}</button>\r\n                </form>\r\n                <button className=\"toggle-mode\" onClick={() => setMode(mode === 'login' ? 'signup' : 'login')}>\r\n                    {mode === 'login' ? 'Signup instead' : 'Login instead'}\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Auth;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}